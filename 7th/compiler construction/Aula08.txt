Aula 8
Professor: Luiz Gustavo

-Analise léxica
    -Reconhecimento de tokens
        -Definições regulares dos padrões dos tokens:
            -digito    ->   [0-9]
            -digitos   ->   digito^+
            -letra     ->   [A-Za-z]
            -num       ->   digitos(.digitos)?(E[+-]?digitos)?
            -id        ->   [letra_][digito letra_]*
            -relop     ->   <|>|<=|>=|=|<>
            -if        ->   if
            -then      ->   then
            -else      ->   else
            -ws        ->   (' '|\t|\n)*

        -Diagramas de transição
            -Fluxogramas usados no reconhecimento dos tokens
                -Muito parecido com os autômatos finitos

                -Gerados a partir dos padrões dos tokens
                    -Estados: nós que representam as condições que podem ocorrer
                    durante a procura de lexemas que casem com um padrão
                        -possui um estado inicial e um ou mais estados finais ou de aceitação

                    -Transições: arestas direcionais associadas à leitura de um ou +
                    símbolos do alfabeto
                        -provoca mudança de estado e avanço do prox

                -Estados de aceitação indicam um lexema aceito
                        -não possuem transição de saída
                        -estão associados às ações que devem ser realizadas pelo
                        analisador léxico
                        -simbolo *indica recuo do prox (tratamento do lookahead)

            -Palavras-Chave vs Identificadores
                -Diferenciar palavras-chave e identificadores pode
                ser um problema
                    -Palavras-chave casam com o padrão dos identificadores
                    -Considerar as palavras-chave como reservadas ajuda
                    no reconhecimento
                        -palavras reservadas não podem ser identificadores

                -Existem 2 formas de lidar com palavras reservadas:
                    -Tratar palavras reservadas como identificador
                    -Criar diagramas separados para cada palavra-chave

                -Tratar palavras reservadas como identificador:
                    -inicia tabela de simbolos com as palavras reservadas
                    -consulta a tabela antes de incluir um novo lexema
                        -se encontrar registro, retorna o nome do token
                        -senão inclui o novo lexema e retorna Identificadores

                    ex:
                    X = getToken(lexema);

                    if(X == NULL)
                        return setID(lexema);
                    else
                        return X;

                -Criar diagramas separados para cada palavra chave:
                    -verifica se a cadeia terminou antes de associar o lexema ao
                    token
                        -para evitar erros prioriza o maior prefixo aceito
                        ex:ifan é um identificador e não a palavra-chave if

                    -se o lexema casar com 2 padrões, deve priorizar a palavra
                    chave
                    
                    -variação que UNIFICA os diagramas IF e do ID:
                        -unificação é uma das estratégias para lidar com vários
                        diagramas durante o processo de reconhecimento

                    p?: Como seriam os diagramas de transição para os
                    demais tokens do nosso estudo de caso?
                    -then, else, ws e num

                    -then e else
                        -já está sendo coberto pelo autômato da 1ª estratégia
                        (palavras reservadas como identificadores)

                        -2ª estratégia: similar ao diagrama do if

                    -ws(separadores)
                        -espaços em branco, tabulações e quebras de linha

                    -constante numérica
                        -num -> digitos (.digitos)? (E[+-]?digitos)?